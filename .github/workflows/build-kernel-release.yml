name: Build OnePlus 13R Kernel

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: true
      ksun_branch:
        description: 'Enter KernelSU Next Branch or commit hash (blank for stable tag)'
        required: true
        type: string
        default: next
      optimize_level:
        description: "Compiler optimization level"
        required: true
        type: choice
        options:
          - O2
          - O3
        default: O2
      android14-6_1_susfs_branch_or_commit:
        description: 'Enter SusFS Branch or commit hash for android14-6.1'
        type: string
        default: 'android14-6.1'

jobs:
  build-op13r:
    name: Build Kernel (OnePlus 13R)
    runs-on: ubuntu-latest
    steps:
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          KERNEL_STRING="android14-6.1"
          SUSFS_BRANCH="${{ inputs.android14-6_1_susfs_branch_or_commit }}"
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: OP13r
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_13r.xml
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_commit_hash_or_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}
          optimize_level: ${{ inputs.optimize_level }}

  # Optional Release Step
  trigger-release:
    needs: [build-op13r]
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: '*TEST BUILD* OnePlus 13R Kernel with KernelSU Next & SUSFS *TEST BUILD*'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.11-r0"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Release Notes
        run: |
          cat << EOF > release_notes.md
          ### OnePlus 13R Kernel Release
          - KernelSU Next integrated
          - SUSFS v1.5.11 support
          - Optimization: ${{ inputs.optimize_level }}
          - Device: OnePlus 13R (sm8650)
          EOF

      - name: Create GitHub Release
        run: |
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease

      - name: Upload Release Assets
        run: |
          for file in ./downloaded-artifacts/*/*.zip; do
            if [ -f "$file" ]; then
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber
            fi
          done
